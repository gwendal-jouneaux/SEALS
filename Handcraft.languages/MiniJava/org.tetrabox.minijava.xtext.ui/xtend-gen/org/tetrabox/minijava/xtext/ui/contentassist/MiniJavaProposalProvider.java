/**
 * generated by Xtext 2.10.0
 */
package org.tetrabox.minijava.xtext.ui.contentassist;

import com.google.inject.Inject;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.jface.viewers.StyledString;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.eclipse.xtext.xbase.lib.Extension;
import org.tetrabox.minijava.xtext.MiniJavaModelUtil;
import org.tetrabox.minijava.xtext.validation.MiniJavaAccessibility;

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
@SuppressWarnings("all")
public class MiniJavaProposalProvider /* implements AbstractMiniJavaProposalProvider  */{
  @Inject
  @Extension
  private MiniJavaModelUtil _miniJavaModelUtil;
  
  @Inject
  @Extension
  private MiniJavaAccessibility _miniJavaAccessibility;
  
  @Override
  public StyledString getStyledDisplayString(final EObject element, final String qualifiedNameAsString, final String shortName) {
    throw new Error("Unresolved compilation problems:"
      + "\nMember cannot be resolved to a type."
      + "\nThe method or field super is undefined"
      + "\nType mismatch: cannot convert from EObject to Member"
      + "\nCannot cast from EObject to Class"
      + "\ngetStyledDisplayString cannot be resolved");
  }
  
  @Override
  public void completeSelectionExpression_Method(final EObject model, final Assignment a, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    throw new Error("Unresolved compilation problems:"
      + "\nMethod cannot be resolved to a type."
      + "\nThe method lookupCrossReference(CrossReference, ContentAssistContext, ICompletionProposalAcceptor, (Object)=>Object) is undefined"
      + "\nThe method or field getEObjectOrProxy is undefined for the type Object"
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nisAccessibleFrom cannot be resolved");
  }
  
  @Override
  public void completeSelectionExpression_Field(final EObject model, final Assignment a, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    throw new Error("Unresolved compilation problems:"
      + "\nField cannot be resolved to a type."
      + "\nThe method lookupCrossReference(CrossReference, ContentAssistContext, ICompletionProposalAcceptor, (Object)=>Object) is undefined"
      + "\nThe method or field getEObjectOrProxy is undefined for the type Object"
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nisAccessibleFrom cannot be resolved");
  }
}
